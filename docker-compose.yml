# Runs different reverse proxies and a service that is designed to interrupt a download unexpectedly
# after a while.configs:
#
# This is designed to reproduce the behavior that we see with large downloads that get interrupted by
# uwsgi when it kills a worker due to the harakiri timeout.
# Is it only a traefik issue? Is it a browser bug? Or our setup?

version: "3.8"

services:
  app:
    image: python:3.9
    restart: unless-stopped
    ports:
      - "127.0.0.1:16180:3000"
    networks:
      - app-net
    environment:
      PYTHONUNBUFFERED: "1"
    stop_signal: SIGINT
    volumes:
      - ./app.py:/usr/src/app/app.py
    command: ["python", "/usr/src/app/app.py"]
  traefik:
    image: traefik:v2.10.3
    restart: unless-stopped
    ports:
      - "127.0.0.1:16243:443"
    networks:
      - app-net
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik-app.yml:/etc/traefik/conf.d/app.yml:ro
  nginx:
    restart: unless-stopped
    ports:
      - "127.0.0.1:16343:443"
    networks:
      - app-net
    volumes:
      - ./nginx-default.conf:/etc/nginx/conf.d/default.conf
    build:
      context: .
      dockerfile: ./nginx.Dockerfile
  traefik-nginx:
    image: traefik:v2.10.3
    restart: unless-stopped
    ports:
      - "127.0.0.1:16443:443"
    networks:
      - app-net
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik-nginx-app.yml:/etc/traefik/conf.d/app.yml:ro
  nginx-nginx:
    restart: unless-stopped
    ports:
      - "127.0.0.1:16543:443"
    networks:
      - app-net
    volumes:
      - ./nginx-nginx.conf:/etc/nginx/conf.d/default.conf
    build:
      context: .
      dockerfile: ./nginx.Dockerfile
  nginx-traefik:
    restart: unless-stopped
    ports:
      - "127.0.0.1:16643:443"
    networks:
      - app-net
    volumes:
      - ./nginx-traefik.conf:/etc/nginx/conf.d/default.conf
    build:
      context: .
      dockerfile: ./nginx.Dockerfile

networks:
  app-net: {}
